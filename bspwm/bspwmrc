#! /bin/sh

# The bspwmrc file is actually an executable shell script.
# So I prefer to keep the .xinitrc (and other X related configuration files)
# as tiny as possible and dump everything here.
# I don't know if there are benefits/downsides to this approach, but it
# works for me.

# Also, every program that is launched from here must be killed
# first! The reason is that I want to be able to "reset" my desktop
# by running this script (which is bound to :e ~

# Where the output of this script is logged to
exec &> ~/.bspwm_startup_log
echo ">> Log file set"

# Set keyboard layout
# Apparently there is a specific model configuration for the HHKB but I'm not
# sure it actually changes something
# Nothing to kill here, setxkbmap does not stay alive
setxkbmap -layout fr -model macintosh_hhk
echo ">> Keyboard layout set"

# I can't seem to find < and > by default so here they are
# (It replaces the upper two, which I never use anyway)
# Nothing to kill here, xmodmap does not stay alive
xmodmap -e "keycode 49 = less greater less greater bar brokenbar"
echo ">> < and > are now accessible"

# Setup monitors
# Sometimes resolution has to be set explicitly here
# Nothing to kill here, xrandr does not stay alive
xrandr --output DP-2 --primary --mode 3440x1440 --rate 120.00 # --left-of DP-2 --output DP-2 --auto
echo ">> Screens position set"

# Avoid the ugly "cross" default X cursor
# Nothing to kill here, xsetroot does not stay alive
xsetroot -cursor_name left_ptr &
echo ">> X cursor set"

# Set mouse speed. We could do that via a X configuration file but who cares.
xinput --set-prop "8" "libinput Accel Speed" -0.6

# Make sure that imwheel is running
# This allows to have a faster scrolling speed
# It think the software itself is completely deprecated but it works
# and there is no solution to control scroll speed with libinput
# to my knowledge so...
imwheel --focus --kill
echo ">> Scroll speed fixed"

# Light the mouse up
# (I don't use a Razer mouse anymore...)
# razer-lights
# echo ">> Razer lights up"

# Make sure the compositor is always started
killall -q picom
while pgrep -u $UID -x picom >/dev/null; do sleep 1; done
picom --experimental-backends &
echo ">> picom launched"

# Make sure we always have our bars
killall -q polybar
while pgrep -u $UID -x polybar >/dev/null; do sleep 1; done
polybar main -c ~/.config/polybar/config.ini &
# polybar alternate -c ~/.config/polybar/config.ini &
echo ">> polybar launched"

# Make sure we have a notification daemon
killall -q dunst
while pgrep -u $UID -x dunst >/dev/null; do sleep 1; done
dunst &
echo ">> dunst launched"

# Make sure we have a screen saver
# Which is also used as a locker
killall -q xfce4-screensaver
while pgrep -u $UID -x xfce4-screensaver >/dev/null; do sleep 1; done
xfce4-screensaver &
echo ">> xfce4-screensaver launched"

# Get a bluetooth applet
# Killing blueman does NOT interrupt active bluetooth connections
killall -q blueman-applet
while pgrep -u $UID -x blueman-applet >/dev/null; do sleep 1; done
killall -q blueman-manager
while pgrep -u $UID -x blueman-manager >/dev/null; do sleep 1; done
killall -q blueman-adapters
while pgrep -u $UID -x blueman-adapters >/dev/null; do sleep 1; done
blueman-applet &
echo ">> blueman launched"

# Set a wallpaper
feh --bg-fill ~/Pictures/wallpapers/current
echo ">> Wallpaper set"

# Or set a solid color
# hsetroot -solid "#181818"
# echo ">> Solid wallpaper set"

# Start a clipboard manager
# Allows for unification and history with rofi later on
# (see the sxhkd configuration)
killall -q greenclip
while pgrep -u $UID -x greenclip >/dev/null; do sleep 1; done
greenclip daemon &
echo ">> greenclip started"

# And start the keyboard daemon
killall -q sxhkd
while pgrep -u $UID -x sxhkd >/dev/null; do sleep 1; done
sxhkd -m 1 &
echo ">> sxhkd launched"

# Finally, some bspwm configuration

bspc monitor DP-2 -d 1 2 3 4 5 6 7 8 9 10
# bspc monitor DP-2 -d 6 7 8 9 10

bspc config border_width          2
bspc config window_gap            20

bspc config split_ratio         0.60

bspc config presel_feedback     false

bspc config single_monocle      false
bspc config gapless_monocle     false
bspc config borderless_monocle  false

bspc config right_monocle_padding   500
bspc config left_monocle_padding    500

bspc config normal_border_color  "#383838"
bspc config active_border_color  "#383838"
bspc config focused_border_color "#f57f17"

bspc rule -a "Bitwarden"            state=floating
bspc rule -a "Nautilus"             state=floating
bspc rule -a "JetBrains Toolbox"    state=floating

bspc rule -a "Zathura"              state=tiled
bspc rule -a Emacs                  state=tiled
